name: continuous-integration

on: [push, pull_request]

jobs:
  pre-commit:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[code_style]
    - name: Run pre-commit
      run: |
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

  tests:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.8]

    runs-on: ${{ matrix.os }}

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[tests]

    - name: install pandoc
      uses: r-lib/actions/setup-pandoc@v1
      with:
        pandoc-version: '2.6'

    - name: Install latex dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y   \
          texlive                 \
          texlive-xetex           \
          texlive-latex-extra     \
          texlive-lang-portuguese \
          latexmk

    - name: Run pytest with latexmk
      if: matrix.os == 'ubuntu-latest'
      run: |
        pytest --cov=ipypublish --cov-report=xml --cov-report=term-missing
        coverage xml

    - name: Run pytest without latexmk
      if: matrix.os != 'ubuntu-latest'
      run: pytest --cov=ipypublish --cov-report=term-missing -k 'not requires_latexmk'

    - name: Upload to Codecov
      if: matrix.python-version == 3.8 && matrix.os == 'ubuntu-latest' && github.repository == 'chrisjsewell/ipypublish'
      uses: codecov/codecov-action@v1
      with:
        name: ipypublish-pytests-py3.8
        flags: pytests
        file: ./coverage.xml
        fail_ci_if_error: true

  nbpublish:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[tests]
    - name: install pandoc
      uses: r-lib/actions/setup-pandoc@v1
      with:
        pandoc-version: '2.6'
    - name: Install latex dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y   \
          texlive                 \
          texlive-xetex           \
          texlive-latex-extra     \
          texlive-lang-portuguese \
          latexmk
    - name: run nbpublish
      run: nbpublish -pdf --pdf-debug -log debug example/notebooks/Example.ipynb

  pypi:

    name: Publish to PyPi
    needs: [pre-commit, tests, nbpublish]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Build package
      run: |
        pip install wheel
        python setup.py sdist bdist_wheel
    - name: Publish
      uses: pypa/gh-action-pypi-publish@v1.1.0
      with:
        user: __token__
        password: ${{ secrets.PYPI_KEY }}
