language: python
matrix:
  include:
  - os: linux
    sudo: required
    python: 3.6
    dist: trusty
    env: TEST_TYPE="flake8"
  - os: linux
    sudo: required
    python: 3.6
    dist: trusty
    env: TEST_TYPE="rtd"
  - os: linux
    sudo: required
    python: 3.6
    dist: trusty
    env: TEST_TYPE="pytest" PYPI_DEPLOY=true
  - os: linux
    sudo: required
    python: 2.7
    dist: trusty
    env: TEST_TYPE="pytest"
  - os: linux
    sudo: required
    python: 3.5
    dist: trusty
    env: TEST_TYPE="pytest"
  - os: linux
    sudo: required
    python: 3.7
    dist: xenial
    env: TEST_TYPE="pytest"
  # TODO this takes too long to install
  # - os: osx
  #   language: generic
  #   env: TEST_TYPE="pytest"
  #   before_install:
  #   - travis_wait brew update
  #   # TODO currently by default python 2.7 is already installed (see https://github.com/travis-ci/travis-ci/issues/9929)
  #   # - brew install python3
  #   # - brew upgrade python
  #   # - pip install virtualenv
  #   # - virtualenv env -p python3
  #   # - source env/bin/activate
  #   # - alias pip="pip3"
  #   - brew install pandoc
  #   - brew upgrade wget
  #   - travis_retry sudo wget http://mirror.ctan.org/systems/mac/mactex/BasicTeX.pkg
  #     -O BasicTeX.pkg
  #   - sudo installer -pkg BasicTeX.pkg -target /
  #   - export PATH=$PATH:/usr/texbin:/Library/TeX/texbin
  #   - travis_retry sudo tlmgr update --self
  #   - travis_retry sudo tlmgr install babel
  #   - travis_retry sudo tlmgr install translations
  #   - travis_retry sudo tlmgr install latexmk
  #   - travis_retry sudo tlmgr install adjustbox
  #   - travis_retry sudo tlmgr install collectbox
  #   - travis_retry sudo tlmgr install ucs
  #   - travis_retry sudo tlmgr install enumitem
  #   - travis_retry sudo tlmgr install placeins
  #   - travis_retry sudo tlmgr install todonotes
  #   - travis_retry sudo tlmgr install chngcntr
  #   - travis_retry sudo tlmgr install doi
  #   - travis_retry sudo tlmgr install mdframed
  #   - travis_retry sudo tlmgr install cleveref
  #   - travis_retry sudo tlmgr install biblatex
  #   - travis_retry sudo tlmgr install needspace
  #   - travis_retry sudo tlmgr install collection-fontsrecommended
  #   # glossaries dependencies
  #   - travis_retry sudo tlmgr install glossaries  # NB: for different languages glossaries-<language>
  #   - travis_retry sudo tlmgr install mfirstuc  # see https://tex.stackexchange.com/questions/268216/usepackageglossaries-wont-work-after-miktex-update-reinstallation
  #   - travis_retry sudo tlmgr install xfor
  #   - travis_retry sudo tlmgr install datatool
  #   - travis_retry sudo tlmgr install substr
  allow_failures:
    - os: linux
      sudo: required
      python: 3.5
      dist: trusty
      env: TEST_TYPE="pytest"
    - os: linux
      sudo: required
      python: 3.7
      dist: xenial
      env: TEST_TYPE="pytest"
    - os: osx
      language: generic
      env: TEST_TYPE="pytest"

before_install:
# Pandoc
- |
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    url="https://github.com/jgm/pandoc/releases/tag/2.6"
    path=$(curl -L $url | grep -o '/jgm/pandoc/releases/download/.*-amd64\.deb')
    downloadUrl="https://github.com$path"
    file=${path##*/}
    wget $downloadUrl && sudo dpkg -i $file
  fi
# LaTeX
- |
  if [[ "$TRAVIS_OS_NAME" == "linux" && "$TEST_TYPE" == "pytest" ]]; then
    sudo apt-get -qq update
    # sudo apt-get install -y pandoc is too old
    sudo apt-get install -y texlive
    sudo apt-get install -y texlive-xetex
    sudo apt-get install -y texlive-latex-extra
    sudo apt-get install -y texlive-lang-portuguese
    # texlive-glossaries doesn't appear to be available
    sudo wget http://mirrors.ctan.org/install/macros/latex/contrib/glossaries.tds.zip
    sudo unzip glossaries.tds.zip -d ~/texmf/
    # need up-to-date koma-script, which isn't supplied with this version of debian
    sudo wget http://mirrors.ctan.org/install/macros/latex/contrib/koma-script.tds.zip
    sudo unzip koma-script.tds.zip -d ~/texmf/
    sudo apt-get install -y latexmk
    if [[ "$TRAVIS_DIST" == "xenial" ]]; then
      sudo apt-get install -y texlive-generic-recommended
    fi
  fi

install:
- pip install -U pip setuptools wheel
- if [[ "$TEST_TYPE" == "pytest" ]]; then travis_wait pip install .[tests] ; fi
- if [[ "$TEST_TYPE" == "pytest" ]]; then pip install --quiet coveralls ; fi
- if [[ "$TEST_TYPE" == "flake8" ]]; then travis_wait pip install "flake8(>=3.7,<3.8)" ; fi
- if [[ "$TEST_TYPE" == "rtd" ]]; then travis_wait pip install .[rtd] ; fi

script:
- if [[ "$TEST_TYPE" == "pytest" ]]; then pytest -v --cov=ipypublish --cov-config .coveragerc --cov-report= ipypublish ; fi
- if [[ "$TEST_TYPE" == "pytest" ]]; then nbpublish -pdf --pdf-debug -log debug example/notebooks/Example.ipynb ; fi
- if [[ "$TEST_TYPE" == "flake8" ]]; then flake8 . ; fi
- if [[ "$TEST_TYPE" == "rtd" ]]; then cd docs; make ; fi

after_success:
- if [[ "$TEST_TYPE" == "pytest" ]]; then coveralls ; fi

deploy:
  - provider: pypi
    distributions: "bdist_wheel sdist"
    user: cjsewell
    password:
      secure: OlCLGajz87wc/RPYMcMC9YrQjMgr6UVaadFQQWknz3ttT84+B0huFVaEbdnEBFNzPlKHlyO2Shz/3GBuBk+83rw997PWRZWCtuSsWgv5UxLm3inWCctQSzVBskHFL6lmQKb9rndUO7SnbX/2N2zuo1Ga2rqmuMLsifBn2An4+C4APCWB694aeAuECmbWMbx3L2YTtLvDL2SFTVtWki0e0bvUXJXVPeIJuKUaNQavaHdPKGjdJGG36+rh8bp4Cte4C2aOXUH3ovhk3VfzJiRDQSRQk2EoNHsB9js3kDsfX6Wn1zZIG4012KUX0tLpj+szI2lnhYeCRlW2t7Hfi/NOHEh1jQMQeuybIpHKmUjnwZC6BOYWT7UgJl2S5k4ZmjsiwTpuPcPmNca70VDpQ9THm4FZbfpLXFz6pBHyzOxQ7xdX2EW94fWv3dE87DSBU5Mu8fAMBTt2foOdRzKkAfQAbfa5TTnzJAf2uSUpGziPXsyaZnJWwSBUgEUvCeCPVaDLYDYSnzFHaQEOvdtkZwDcZ0oD5U6qW0/J6pzlvppWbEVCAPZ6Nos9o4ciO/JlNlEsgwVSgHceT7aFCvkhSKszIhzK0uk62PPgRhu6gZ9PHWQQJhVcL74lRXfsDqPR/sxA6xchHy1dXL+8J5MOtrMWOsk5HpInPKff7ErCzJOJHzg=
    on:
      branch: master
      tags: true
      condition: $PYPI_DEPLOY = true
